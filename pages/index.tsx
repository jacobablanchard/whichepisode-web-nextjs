import SearchIcon from '@mui/icons-material/Search'
import { Input, InputAdornment, Stack } from '@mui/material'
import CssBaseline from '@mui/material/CssBaseline'
import { ThemeProvider, createTheme } from '@mui/material/styles'
import Head from 'next/head'
import { ChangeEventHandler, useRef, useState } from 'react'

import { SearchResults } from '../components/SearchResults'
import { trpc } from '../utils/trpc'

const darkTheme = createTheme({
    palette: {
        mode: 'dark',
    },
})

export default function Home() {
    const [queryString, setQueryString] = useState('')
    const configResult = trpc.theMovieDB.getImageConfig.useQuery(undefined, {
        cacheTime: 12 * 60 * 60 * 1000,
        // hours->minutes->seconds->miliseconds
    })
    const onQueryStringChanged: ChangeEventHandler<HTMLInputElement> = (
        event
    ) => {
        setQueryString(event.target.value)
    }

    return (
        <>
            <Head>
                <title>Which Episode?</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <ThemeProvider theme={darkTheme}>
                <CssBaseline />
                <Stack m={3}>
                    <Input
                        id="input-with-icon-adornment"
                        startAdornment={
                            <InputAdornment position="start">
                                <SearchIcon />
                            </InputAdornment>
                        }
                        placeholder="Enter a show you want to search for"
                        onChange={onQueryStringChanged}
                        value={queryString}
                    />
                    <SearchResults
                        queryString={queryString}
                        ImageConfigurations={configResult.data}
                    />
                </Stack>
            </ThemeProvider>
        </>
    )
}
